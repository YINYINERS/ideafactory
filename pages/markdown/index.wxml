<view class="app-container">
  <!-- 背景图片组件 -->
  <image 
    class="background-image"
    src="/images/bg-light.jpg"
    mode="aspectFill"
    lazy-load="{{false}}"
  ></image>
  
  <!-- 背景遮罩 -->
  <view class="background-overlay"></view>
  
  <!-- 内容包装器 -->
  <view class="content-wrapper">
    <!-- 全屏输入模式 - 重新设计布局 -->
    <view class="fullscreen-modal {{isFullscreen ? 'active' : ''}}">
      <!-- 顶部头部 - 只有标题和字数计数器 -->
      <view class="fullscreen-header">
        <text class="fullscreen-title">编辑文本</text>
        <text class="fullscreen-char-counter">{{markdownText.length}}/100000</text>
      </view>
      
      <!-- 滚动内容区域 -->
      <scroll-view 
        class="fullscreen-scroll-wrapper"
        scroll-y="true"
        enhanced="true"
        bounces="true"
        show-scrollbar="true"
        fast-deceleration="false"
        enable-back-to-top="false"
        scroll-with-animation="false"
        refresher-enabled="false"
        refresher-triggered="false"
        enable-flex="false"
        scroll-anchoring="false"
        refresher-default-style="none"
        refresher-background="transparent"
      >
        <view class="fullscreen-content-wrapper">
          <textarea 
            class="fullscreen-textarea"
            placeholder="请输入Markdown格式的笔记文本..."
            value="{{markdownText}}"
            bindinput="onMarkdownInput"
            maxlength="100000"
            auto-focus="{{false}}"
            disable-default-padding="true"
            auto-height="true"
          ></textarea>
          <view class="fullscreen-bottom-spacer"></view>
        </view>
      </scroll-view>
      
      <!-- 底部按钮栏 - 清空和完成按钮 -->
      <view class="fullscreen-bottom-bar">
        <button class="btn-fullscreen-clear" bindtap="clearInput">清空</button>
        <button class="btn-fullscreen-done" bindtap="toggleFullscreen">完成</button>
      </view>
    </view>

    <!-- 主界面 -->
    <view class="main-content {{isFullscreen ? 'hidden' : ''}}">
      <!-- 将scroll-view移到外层，包含所有内容 -->
      <scroll-view 
        class="scroll-container"
        scroll-y="true"
        enhanced="true"
        bounces="true"
        show-scrollbar="false"
        fast-deceleration="false"
      >
        <!-- 顶部导航 -->
        <view class="nav-header">
          <view class="nav-title">
            <text class="title-main">MarkDown TransForm</text>
            <text class="title-sub">Updated: Jul 16, 2025</text>
          </view>
        </view>
        
        <!-- 内容区域包装器 - 添加左右间距 -->
        <view class="content-inner">
          <!-- 输入区域 -->
          <view class="input-card">
            <view class="card-header">
              <!-- 修改为 icon + 文字形式 -->
              <view class="section-label">
                <image class="section-icon" src="/images/input-icon.png" mode="aspectFit" />
                <text class="section-text">输入文本</text>
              </view>
            </view>
            <view class="input-container">
              <textarea 
                class="text-input"
                placeholder="请输入Markdown格式的文本..."
                value="{{markdownText}}"
                bindinput="onMarkdownInput"
                maxlength="100000"
              ></textarea>
            </view>
            <view class="input-actions">
              <text class="char-counter">{{markdownText.length}}/100000</text>
              <button class="btn-fullscreen" bindtap="toggleFullscreen">全屏输入</button>
              <button class="btn-clear" size="mini" bindtap="clearInput">清空</button>
            </view>
          </view>
          
          <!-- 设置区域 -->
          <view class="settings-card">
            <view class="card-header">
              <!-- 修改为 icon + 文字形式 -->
              <view class="section-label">
                <image class="section-icon" src="/images/settings-icon.png" mode="aspectFit" />
                <text class="section-text">个性化设置</text>
              </view>
            </view>
            
            <!-- 背景颜色 -->
            <view class="setting-group">
              <text class="setting-label">背景颜色</text>
              <view class="color-grid">
                <view 
                  class="color-option {{item === settings.backgroundColor ? 'selected' : ''}}"
                  wx:for="{{backgroundColors}}"
                  wx:key="*this"
                  style="background-color: {{item}}"
                  bindtap="onBackgroundColorChange"
                  data-color="{{item}}"
                ></view>
              </view>
            </view>
            
            <!-- 字体大小 -->
            <view class="setting-group">
              <view class="setting-header">
                <text class="setting-label">字体大小</text>
                <text class="setting-value">{{settings.fontSize}}px</text>
              </view>
              <slider 
                class="custom-slider"
                min="12"
                max="28"
                value="{{settings.fontSize}}"
                bindchange="onFontSizeChange"
                activeColor="#34C759"
                backgroundColor="#E5E5EA"
              />
            </view>
            
            <!-- 页面边距 -->
            <view class="setting-group">
              <view class="setting-header">
                <text class="setting-label">页面边距</text>
                <text class="setting-value">{{settings.padding}}px</text>
              </view>
              <slider 
                class="custom-slider"
                min="16"
                max="48"
                value="{{settings.padding}}"
                bindchange="onPaddingChange"
                activeColor="#34C759"
                backgroundColor="#E5E5EA"
              />
            </view>
            
            <!-- 导出格式 -->
            <view class="setting-group">
              <text class="setting-label">导出格式</text>
              <picker 
                range="{{exportFormats}}"
                range-key="label"
                value="{{exportFormatIndex}}"
                bindchange="onExportFormatChange"
              >
                <view class="picker-button">
                  <text class="picker-text">{{exportFormats[exportFormatIndex].label}}</text>
                  <text class="picker-arrow">›</text>
                </view>
              </picker>
            </view>
          </view>
          
          <!-- 预览区域 -->
          <view class="preview-card" wx:if="{{previewText}}">
            <view class="card-header">
              <!-- 修改为 icon + 文字形式 -->
              <view class="section-label">
                <image class="section-icon" src="/images/preview-icon.png" mode="aspectFit" />
                <text class="section-text">实时预览</text>
              </view>
            </view>
            <view class="preview-container" style="background-color: {{settings.backgroundColor}}; padding: {{settings.padding}}px; font-size: {{settings.fontSize}}px; color: {{settings.backgroundColor === '#000000' ? '#ffffff' : '#1c1c1e'}};">
              <text class="preview-text">{{previewText}}</text>
            </view>
          </view>
          
          <!-- 底部占位，确保内容不被按钮遮挡 -->
          <view style="height: 140rpx;"></view>
        </view>
      </scroll-view>
      
      <!-- 生成按钮 -->
      <view class="action-area">
        <button 
          class="btn-generate {{generating ? 'loading' : ''}}"
          bindtap="generateImage"
          disabled="{{markdownText.length === 0 || generating}}"
          loading="{{generating}}"
        >
          <text class="btn-text">{{generating ? '生成中...' : '生成长截图'}}</text>
        </button>
      </view>
    </view>
  </view>
  
  <!-- Canvas -->
  <canvas 
    canvas-id="imageCanvas"
    class="hidden-canvas"
    style="width: {{canvasWidth}}px; height: {{canvasHeight}}px;"
  ></canvas>
</view>